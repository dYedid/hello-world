def validSolution(board):
  a = 0
  while a < 9:
      x = 1
      while x < 10:
          if x not in board[a]: return False
          x += 1
      a += 1
  b = 0
  while b < 9:
      lst = list()
      c = 0
      while c < 9:
          lst.append(board[c][b])
          c += 1
      x = 1
      while x < 10:
          if x not in lst: 
              return False
          x += 1
      b += 1
  y = 0
  while y <= 6:
      z = 0
      while z <= 6:
          d = y
          lst2 = list()
          while d < 3 + y:
              e = z
              while e < 3 + z:
                  lst2.append(board[d][e])
                  e += 1
              d += 1
          x = 1
          while x < 10:
              if x not in lst2: 
                  return False
              x += 1
          z += 3
      y += 3
  return True

print(validSolution([
[5, 3, 4, 6, 7, 8, 9, 1, 2],
[6, 7, 2, 1, 9, 5, 3, 4, 8],
[1, 9, 8, 3, 4, 2, 5, 6, 7],
[8, 5, 9, 7, 6, 1, 4, 2, 3],
[4, 2, 6, 8, 5, 3, 7, 9, 1],
[7, 1, 3, 9, 2, 4, 8, 5, 6],
[9, 6, 1, 5, 3, 7, 2, 8, 4],
[2, 8, 7, 4, 1, 9, 6, 3, 5],
[3, 4, 5, 2, 8, 6, 1, 7, 9]]));
# should log True
                                
print(validSolution([
[5, 3, 4, 6, 7, 8, 9, 1, 2],
[6, 7, 2, 1, 9, 0, 3, 4, 9],
[1, 0, 0, 3, 4, 2, 5, 6, 0],
[8, 5, 9, 7, 6, 1, 0, 2, 0],
[4, 2, 6, 8, 5, 3, 7, 9, 1],
[7, 1, 3, 9, 2, 4, 8, 5, 6],
[9, 0, 1, 5, 3, 7, 2, 1, 4],
[2, 8, 7, 4, 1, 9, 6, 3, 5],
[3, 0, 0, 4, 8, 1, 1, 7, 9]]));
# should log False
                         
print(validSolution([
[1, 2, 3, 4, 5, 6, 7, 8, 9],
[9, 1, 2, 3, 4, 5, 6, 7, 8],
[8, 9, 1, 2, 3, 4, 5, 6, 7],
[7, 8, 9, 1, 2, 3, 4, 5, 6],
[6, 7, 8, 9, 1, 2, 3, 4, 5],
[5, 6, 7, 8, 9, 1, 2, 3, 4],
[4, 5, 6, 7, 8, 9, 1, 2, 3],
[3, 4, 5, 6, 7, 8, 9, 1, 2],
[2, 3, 4, 5, 6, 7, 8, 9, 1]]));
# should log False  

print(validSolution([
[5, 3, 4, 6, 7, 8, 9, 1, 2],
[6, 7, 2, 1, 9, 5, 3, 4, 8], 
[1, 9, 8, 3, 4, 2, 5, 6, 7], 
[8, 5, 9, 7, 6, 1, 4, 2, 3], 
[4, 2, 6, 8, 5, 3, 7, 9, 1], 
[7, 1, 3, 9, 2, 4, 8, 5, 6], 
[9, 6, 1, 5, 3, 7, 2, 8, 4], 
[2, 8, 7, 4, 1, 9, 6, 3, 5], 
[3, 4, 5, 2, 8, 6, 1, 7, 9]]));

print(validSolution([
[5, 3, 4, 6, 7, 8, 9, 1, 2], 
[6, 7, 2, 1, 9, 0, 3, 4, 9], 
[1, 0, 0, 3, 4, 2, 5, 6, 0], 
[8, 5, 9, 7, 6, 1, 0, 2, 0], 
[4, 2, 6, 8, 5, 3, 7, 9, 1], 
[7, 1, 3, 9, 2, 4, 8, 5, 6], 
[9, 0, 1, 5, 3, 7, 2, 1, 4], 
[2, 8, 7, 4, 1, 9, 6, 3, 5], 
[3, 0, 0, 4, 8, 1, 1, 7, 9]]));

print(validSolution([
[1, 3, 2, 5, 7, 9, 4, 6, 8], 
[4, 9, 8, 2, 6, 1, 3, 7, 5], 
[7, 5, 6, 3, 8, 4, 2, 1, 9], 
[6, 4, 3, 1, 5, 8, 7, 9, 2], 
[5, 2, 1, 7, 9, 3, 8, 4, 6], 
[9, 8, 7, 4, 2, 6, 5, 3, 1], 
[2, 1, 4, 9, 3, 5, 6, 8, 7], 
[3, 6, 5, 8, 1, 7, 9, 2, 4], 
[8, 7, 9, 6, 4, 2, 1, 5, 3]]));

print(validSolution([
[1, 3, 2, 5, 7, 9, 4, 6, 8],
[4, 9, 8, 2, 6, 1, 3, 7, 5], 
[7, 5, 6, 3, 8, 4, 2, 1, 9], 
[6, 4, 3, 1, 5, 8, 7, 9, 2], 
[5, 2, 1, 7, 9, 3, 8, 4, 6], 
[9, 8, 7, 4, 2, 6, 5, 3, 1], 
[2, 1, 4, 9, 3, 5, 6, 8, 7], 
[3, 6, 5, 8, 1, 7, 9, 2, 4], 
[8, 7, 9, 6, 4, 2, 1, 3, 5]]));

print(validSolution([
[1, 3, 2, 5, 7, 9, 4, 6, 8],
[4, 9, 8, 2, 6, 0, 3, 7, 5], 
[7, 0, 6, 3, 8, 0, 2, 1, 9], 
[6, 4, 3, 1, 5, 0, 7, 9, 2], 
[5, 2, 1, 7, 9, 0, 8, 4, 6], 
[9, 8, 0, 4, 2, 6, 5, 3, 1], 
[2, 1, 4, 9, 3, 5, 6, 8, 7], 
[3, 6, 0, 8, 1, 7, 9, 2, 4], 
[8, 7, 0, 6, 4, 2, 1, 3, 5]]));

print(validSolution([
[1, 2, 3, 4, 5, 6, 7, 8, 9], 
[2, 3, 4, 5, 6, 7, 8, 9, 1], 
[3, 4, 5, 6, 7, 8, 9, 1, 2], 
[4, 5, 6, 7, 8, 9, 1, 2, 3], 
[5, 6, 7, 8, 9, 1, 2, 3, 4], 
[6, 7, 8, 9, 1, 2, 3, 4, 5], 
[7, 8, 9, 1, 2, 3, 4, 5, 6], 
[8, 9, 1, 2, 3, 4, 5, 6, 7], 
[9, 1, 2, 3, 4, 5, 6, 7, 8]]));
